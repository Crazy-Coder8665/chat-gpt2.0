<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Chat Interface</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .header {
            padding: 20px;
            background-color: #343541;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .header h1 {
            margin: 0;
            font-size: 24px;
        }
        .header-buttons {
            display: flex;
            gap: 10px;
        }
        .button {
            padding: 8px 16px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        .export-button {
            background-color: #4CAF50;
            color: white;
        }
        .close-button {
            background-color: #f44336;
            color: white;
        }
        .chat-container {
            height: 600px;
            overflow-y: auto;
            padding: 20px;
        }
        .message {
            margin-bottom: 20px;
            padding: 15px;
            border-radius: 10px;
            max-width: 80%;
        }
        .user-message {
            background-color: #e3f2fd;
            margin-left: auto;
        }
        .assistant-message {
            background-color: #f5f5f5;
            margin-right: auto;
        }
        .input-container {
            padding: 20px;
            border-top: 1px solid #eee;
            display: flex;
            gap: 10px;
        }
        textarea {
            flex: 1;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            resize: none;
            height: 24px;
            font-family: inherit;
            font-size: 16px;
        }
        .send-button {
            padding: 12px 24px;
            background-color: #343541;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
            color: #666;
        }
        .loading.active {
            display: block;
        }
        .error {
            color: #f44336;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            background-color: #ffebee;
            display: none;
        }
        .error.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>AI Chat Interface</h1>
            <div class="header-buttons">
                <button class="button export-button" onclick="exportChat()">Export Chat</button>
                <button class="button close-button" onclick="closeChat()">Close Chat</button>
            </div>
        </div>
        <div class="chat-container" id="chatContainer"></div>
        <div class="loading" id="loading">Processing...</div>
        <div class="error" id="error"></div>
        <div class="input-container">
            <textarea id="messageInput" placeholder="Type your message..." onkeydown="handleKeyPress(event)"></textarea>
            <button class="send-button" onclick="sendMessage()">Send</button>
        </div>
    </div>

    <script>
        const chatContainer = document.getElementById('chatContainer');
        const messageInput = document.getElementById('messageInput');
        const loading = document.getElementById('loading');
        const error = document.getElementById('error');

        function addMessage(content, isUser = false) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isUser ? 'user-message' : 'assistant-message'}`;
            messageDiv.textContent = content;
            chatContainer.appendChild(messageDiv);
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        async function sendMessage() {
            const message = messageInput.value.trim();
            if (!message) return;

            // Add user message to chat
            addMessage(message, true);
            messageInput.value = '';
            loading.classList.add('active');
            error.classList.remove('active');

            try {
                const response = await fetch('/chat/send', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message }),
                });

                const data = await response.json();
                if (data.success) {
                    addMessage(data.data);
                } else {
                    throw new Error(data.error);
                }
            } catch (err) {
                error.textContent = err.message;
                error.classList.add('active');
            } finally {
                loading.classList.remove('active');
            }
        }

        async function closeChat() {
            try {
                const response = await fetch('/chat/close', {
                    method: 'POST',
                });
                const data = await response.json();
                if (data.success) {
                    window.location.reload();
                } else {
                    throw new Error(data.error);
                }
            } catch (err) {
                error.textContent = err.message;
                error.classList.add('active');
            }
        }

        async function exportChat() {
            try {
                window.location.href = '/chat/export';
            } catch (err) {
                error.textContent = err.message;
                error.classList.add('active');
            }
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendMessage();
            }
        }

        // Auto-resize textarea
        messageInput.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
    </script>
</body>
</html> 